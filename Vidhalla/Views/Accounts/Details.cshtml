@using Vidhalla.Core.Domain
@using Vidhalla.Extensions
@model Vidhalla.ViewModels.Accounts.DetailsViewModel

@{
    ViewBag.Title = "Details";
    var account = Model.Account;
    var subscribeds = Model.Subscribeds;

    var accountInSession = Session.GetAuthenticatedAccount();

    var nextAction = "";
    if (accountInSession != null)
    {
        nextAction = account.Subscribers.Any(s => s.Id == accountInSession.Id) ? "Unsubscribe" : "Subscribe";
    }
    else
    {

        nextAction = "Subscribe";
    }

}

<div style="margin-top: 7em;" class="container">

    <main>
        <img alt="Profile picture" src=@Url.Action("LoadProfilePicture", "Accounts", new { profilePicture = account.ProfilePicture }) class="bigThumbnail">
        <h1 id="username"> @account.Username <br /> <text>@account.Subscribers.Count subscribers</text> </h1>

        @* Ako neulogovan korisnik posmatra ne daj
            Ako je ulogovani korisnik vlasnik naloga koji se posmatra a nije admin onda vidi da li je blokiran ako jeste ne daj
             Ako ulogovani korisnik nije vlasnik i nije admin ne daj
        *@

        @if (accountInSession != null && (accountInSession.IsAdmin() || (accountInSession.Is(account) && !account.IsBlocked)))
        {
            using (Html.BeginForm("UploadProfilePicture", "Accounts", FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <input id="accountId" name="accountId" type="hidden" value=@account.Id>
                <div class="form-group">
                    <input type="file" multiple accept="image/*" name="picture" id="picture">
                </div>
                <div class="form-group">
                    <button id="uploadImageBtn" type="submit" class="btn btn-default"> Upload</button>
                </div>
            }

            @Html.ActionLink("Edit", "Edit", "Accounts", new { id = account.Id }, new { @class = "btn btn-info", role = "button" })

        }

        <p id="channelInfo" style="margin-top: 1.5em;"> @account.ChannelDescription </p>

    </main>

    <hr style="padding-top: 2em;">

</div>

<div class="container" style="display:block;content:'';clear:both">
    <section style="width: 40%; float: left">
        @if (accountInSession != null && (accountInSession.IsAdmin() || (accountInSession.Is(account) && !account.IsBlocked)))
        {
            @Html.ActionLink("Upload", "Upload", "Videos", null, new { @class = "btn btn-primary", role = "button" })
            <br>
        }

        <h3>Uploaded Videos</h3>

        <ul id="uploadedVideosList">
            @if (account.UploadedVideos.Count == 0)
            {
                <li>No uploaded videos yet.</li>
            }
            else
            {
                foreach (var video in account.UploadedVideos)
                {
                    if (accountInSession == null || (accountInSession.IsRegularUser() && !accountInSession.Is(video.Uploader)))
                    {
                        if (video.Visibility == Visibility.PUBLIC)
                        {
                            <li>
                                <div>
                                    <iframe src=@video.Url></iframe>
                                    <h4> @Html.ActionLink(video.Title, "Details", "Videos", new { id = video.Id }, new { }) </h4>
                                    <span> @video.ViewsCount views</span>
                                    <span style="display: block">Published on @video.DateUploaded.ToShortDateString() </span>
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        if (accountInSession.IsAdmin() || accountInSession.Is(video.Uploader))
                        {
                            <li>
                                <div>
                                    <iframe src=@video.Url></iframe>
                                    <h4> @Html.ActionLink(video.Title, "Details", "Videos", new { id = video.Id }, new { }) </h4>
                                    <span> @video.ViewsCount views</span>
                                    <span style="display: block">Published on @video.DateUploaded.ToShortDateString() </span>
                                </div>
                            </li>
                        }
                    }

                }
            }
        </ul>
    </section>
    <aside style="margin-top: 2.4em;width : 20%; float: right;">
        <h3>Following</h3>
        <br>
        <ul id="subscribedsList">

            @if (!subscribeds.Any())
            {
                <li><i>Not following anyone yet.</i></li>
            }
            else
            {
                <!-- Ovdje kacim dinamicki kreirane <li> korisnika koje korisnik cija se stranica posmatra, prati -->
                foreach (var subscribed in subscribeds)
                {

                    <li>
                        <a href=@Url.Action("Details", "Accounts", new {username = subscribed.Username})> <img src=@Url.Action("LoadProfilePicture", "Accounts", new {profilePicture = subscribed.ProfilePicture}) class="smallThumbnail"> @subscribed.Username </a>
                        &nbsp;
                        <span style="float: right; padding-top: 0.46em;">@subscribed.Subscribers.Count</span>
                        <hr />
                    </li>

                }
            }
        </ul>
    </aside>
</div>

@section scripts
{
    <script type="text/javascript" src=@Url.Content("~/Scripts/accounts-details.js")></script>
    <script type="text/javascript"> src=@Url.Content("~/Scripts/mSnackbar.min.js")</script>
}
